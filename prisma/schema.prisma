generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Usuario {
  id                  String       @id @default(uuid()) @db.Uuid
  /// Credencial de inicio de sesión. Debe ser único
  email               String       @unique @db.VarChar(120)
  nombre              String       @db.VarChar(120)
  validado            Boolean      @default(false)
  idRol               Int
  fechaQuitado        DateTime?
  rol                 Rol          @relation(fields: [idRol], references: [id])
  clave               Clave?
}

model Clave {
  idUsuario String  @id @db.Uuid
  hash      String
  usuario   Usuario @relation(fields: [idUsuario], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Rol {
  id       Int       @id @default(autoincrement())
  nombre   String
  homeUrl  String    @default("/")
  idMenu   Int?
  menu     Menu?     @relation(fields: [idMenu], references: [id])
  usuarios Usuario[]
}

model Menu {
  id        Int        @id @default(autoincrement())
  nombre    String     @unique
  direccion Direccion  @default(VERTICAL)
  rol       Rol[]
  items     MenuItem[] @relation("MenuToMenuItem")
}

model MenuItem {
  id     Int    @id @default(autoincrement())
  nombre String @unique
  url    String
  orden  Int
  menues Menu[] @relation("MenuToMenuItem")
}


/// Orientación del menú de navegación
enum Direccion {
  VERTICAL
  HORIZONTAL
}

model Config {
  id          String @id @unique
  descripcion String
  nombre      String
  valor       String
}

model CMSLink {
  id String @id @default(uuid())
  nombre String
  tipo CMSLinkType
  url String
  orden Int
}

enum CMSLinkType {
  INSTAGRAM
  YOUTUBE
}
